#!/bin/bash
#This script builds the menu for the ipxe bootloader
set -euo pipefail
#Variables (User Adjustable)

# Load env
CONFIG_FILE="$(dirname "$0")/../../config/env.conf"
if [ -f "$CONFIG_FILE" ]; then
    source "$CONFIG_FILE"
else
    echo "Error: env configuration file not found at $CONFIG_FILE"
    echo "Run setup-env.sh to create it"
    exit 1
fi

MENU_DIR="/boot/menu.ipxe"
MENU_DIR_IRL="$(realpath "$BASE_DIR$MENU_DIR")"

#####################################
# VARIABLES END HERE SO DON'T TOUCH!#
#####################################
echo "Building menu..."
cat > $MENU_DIR_IRL <<EOF
#!ipxe
# This is the menu for the ipxe bootloader
# This file is generated by the build script
# Do not edit this file directly
# It will be overwritten by the build script

# Check if theres a per-machine config for this stage
chain ${SERVER_PROTOCOL}://${SERVER_IPv4}${SERVER_BASE_PATH}/config/machine-specific/\${net0/mac}/premenu.ipxe ||
chain ${SERVER_PROTOCOL}://${SERVER_IPv4}${SERVER_BASE_PATH}/config/premenu.ipxe ||
:menu
menu  Choose a boot option
chain ${SERVER_PROTOCOL}://${SERVER_IPv4}${SERVER_BASE_PATH}/config/machine-specific/\${net0/mac}/menu.ipxe ||

EOF

# Loop through folders in the boot directory
for dir in $BASE_DIR/boot/*; do
    # Check if the directory is a valid boot option
    if [ -d "$dir" ]; then
        # Get the name of the directory
        echo $dir
        name=$(basename "$dir")
        echo "Added OS option: $name"
        # Add the option to the menu
        echo "# Content of: $name" >> $MENU_DIR_IRL
        cat $dir/menu.pipxe >> $MENU_DIR_IRL
        echo "# End of: $name" >> $MENU_DIR_IRL
        echo " " >> $MENU_DIR_IRL
    fi
done

echo "# Extra menu options" >> $MENU_DIR_IRL
# Loop through folders in the menu directory
for file in $BASE_DIR/config/menu.d/*.ipxe; do
    # Check if the directory is a valid boot option
    if [ -f "$file" ]; then
        # Get the name of the directory
        echo "Added extra menu option: $file"
        # Add the option to the menu
        echo "# Content of: $file" >> $MENU_DIR_IRL
        cat $file >> $MENU_DIR_IRL
        echo "# End of: $file" >> $MENU_DIR_IRL
        echo " " >> $MENU_DIR_IRL

    fi
done

cat >> $MENU_DIR_IRL <<EOF
#End of extra menu options
item --gap -- Local Boot Options
goto bypass
:shell
shell
goto menu
:exit
exit 
:local-disk
sanboot --no-describe --drive 0x80
:bypass
item exit Exit
item shell Shell
item local-disk Boot from local disk
choose  --default exit --timeout 3000 target && goto \${target}
EOF



